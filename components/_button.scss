@use 'sass:map';
@use '../abstracts/variables' as v;
@use '../abstracts/mixins' as *;

@mixin buttons($color, $bg_color) {
    @include all_components;
    @include shadow_outset;
    background-color: $bg_color;
    color: $color;
    text-transform: uppercase;
    outline: none;
    border: none;
    font-size: map.get(v.$fontsizes, 'button');
    padding: 1.1em 1.2em;
    font-weight: normal;
    border: 1px solid transparent;
    transition: v.$transition1;
    letter-spacing: 1px;

    &:hover, &:focus {
        opacity: 0.9;
    }

    &:active {
        opacity: 1;
        box-shadow: unset;
        border: 1px solid transparent;
    }

    &:disabled {
        opacity: 50%;
        cursor: not-allowed;
    }

    &.btn_small {
        height: 2.5em;
        padding: 0 1em;
        font-weight: normal;
    }
}

button, 
input[type=submit], 
input[type=reset] {
    @include buttons(v.$theme_light_100, v.$theme_dark_500);

    &.noformat {
        background-color: transparent;
        border: none;
        color: unset;
        padding: 0;
        margin: 0;
    }
}

.button {
    @include buttons(v.$theme_light_100, v.$theme_dark_500);
    &_gradient {
        background: v.$button_gradient;
    }

    &_link {
        // text-decoration: none;
        cursor: pointer;
        &:hover {
            color: v.$main_color;
            text-decoration: underline;
        }
    }

    &_text {
        font-size: map.get(v.$fontsizes, 'medium');
        font-weight: bold;
        text-decoration: none;
        cursor: pointer;

        &:hover {
            color: v.$main_color;
        }
    }
}


.cancel {
    @include buttons(v.$theme_light_100, v.$theme_dark_500);
    background-color: transparent;
    color: v.$theme_dark_500;
    background-color: v.$theme_light_200;

    // border: 1px solid v.$main_color_dark;

    &:hover {
        background-color: v.$theme_light_300;
    }
}

.circle {
    height: 4em;
    width: 4em;
    border-radius: 50%;
    font-size: 0.6rem;
    background-color: v.$accent_color_2;
    letter-spacing: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: normal;

    &.small {
        height: 3em;
        width: 3em;
    }
}




a.underlined_item_links {
    color: v.$theme_light_500;
    font-size: map.get(v.$fontsizes, 'medium');
    border-bottom: 3px solid transparent;
    text-decoration: none;
    padding-bottom: 0.6em;

    &:hover:not(.active) {
        transition: v.$slow;
        color: v.$theme_dark_200;
        border-bottom: 3px solid v.$theme_light_200;
    }

    &.active {
        color: v.$theme_dark_400;
        border-bottom: 3px solid v.$theme_accent_1
        // transform: scale(1);
    }
}


.hover_scale {
    transform: scale(1.1);
}

i.clickable {
    transition: 0.2s;
    &:hover {
        transform: scale(1.15);
    }
}

.btn_w_s {
    width: 8em;
}


.panel_settings_button {
    position: fixed;    
    right: 3em;
    bottom: 3em;
    box-shadow: v.$pop_message_shadow;
}

.btn_new_post {
    border-radius: 3em;
    span {
        display: none;
    }

    &:hover {
        transition: v.$normal;
        border-radius: 3em;
        span {
            display: inline-block;
        }
    }
}